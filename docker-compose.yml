services:
  grpc-server:
    build: .
    ports:
      - "50052:50051" # I have a macOS system daemon that uses this port
      - "2112:2112"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
        reservations:
          cpus: "2"
          memory: 2G
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50051"]
      interval: 30s
      timeout: 3s
      retries: 3
    labels:
      - "com.docker.compose.service=grpc-server"
      - "com.docker.compose.project=instrumented-grpc-service-benchmark"
      - "monitoring.service=grpc-server"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    sysctls:
      net.core.somaxconn: 65535
      net.ipv4.tcp_max_syn_backlog: 65535

  prometheus:
    image: prom/prometheus:v2.55.0
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.wal-compression"
      - "--storage.tsdb.retention.size=50GB"
      - "--query.max-samples=100000000"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1"
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 3s
      retries: 3

  grafana:
    image: grafana/grafana:11.3.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_LOG_LEVEL=debug # Temporarily increase logging for troubleshooting
    user: "472" # This is the grafana user ID
    volumes:
      - grafana-storage:/var/lib/grafana:rw
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      prometheus:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  influxdb:
    image: influxdb:2.7.10
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=performance-testing
      - DOCKER_INFLUXDB_INIT_BUCKET=perf-tests
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
      # performance tuning parameters
      - INFLUXDB_DATA_CACHE_MAX_MEMORY_SIZE=512m
      - INFLUXDB_DATA_MAX_CONCURRENT_COMPACTIONS=2
      - INFLUXDB_HTTP_MAX_BODY_SIZE=25000000
      - INFLUXDB_HTTP_WRITE_TIMEOUT=30s
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    networks:
      - monitoring
      - default
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "2"
        reservations:
          memory: 2G
          cpus: "1"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    logging:
      options:
        max-size: "50m"
        max-file: "3"

  k6:
    image: grafana/k6
    volumes:
      - ./tests/k6:/scripts
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    privileged: true
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /:/rootfs:ro,rslave
    environment:
      - CADVISOR_HEALTHCHECK_URL=http://localhost:8080/healthz
    command:
      - "--docker_only=true"
      - "--disable_metrics=disk,diskIO"
      - "--docker_env_metadata_whitelist=.*"
      - "--enable_metrics=cpu,memory,network"
      - "--allow_dynamic_housekeeping=true"
      - "--housekeeping_interval=10s"
      - "--global_housekeeping_interval=30s"
      - "--disable_root_cgroup_stats=false"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3

  node-exporter:
    image: prom/node-exporter:v1.7.0
    ports:
      - "9100:9100"
    command:
      - "--web.listen-address=:9100"
      - "--collector.disable-defaults"
      - "--collector.cpu"
      - "--collector.meminfo"
      - "--collector.loadavg"
      - "--collector.netdev"
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9100/-/healthy"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana-storage:
  influxdb-data:
  influxdb-config:
